name: Test Coverage

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test-coverage:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
          
      - name: Install dependencies
        run: bun install
        
      - name: Run tests with coverage
        run: bun run test:coverage
        continue-on-error: false
        
      - name: Check coverage thresholds
        run: |
          echo "Coverage thresholds are enforced in vitest.config.ts"
          echo "Global: 50% | Core Logic: 80% | Agents: 75% | Handlers: 70% | Utils: 60%"
          
      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/
          
      - name: Comment coverage on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            
            const coveragePath = path.join(process.env.GITHUB_WORKSPACE, 'coverage', 'coverage-summary.json');
            
            if (fs.existsSync(coveragePath)) {
              const coverage = JSON.parse(fs.readFileSync(coveragePath, 'utf8'));
              const total = coverage.total;
              
              const comment = `## ðŸ“Š Test Coverage Report
              
              | Metric | Coverage | Threshold |
              |--------|----------|-----------|
              | Statements | ${total.statements.pct.toFixed(2)}% | 50% |
              | Branches | ${total.branches.pct.toFixed(2)}% | 50% |
              | Functions | ${total.functions.pct.toFixed(2)}% | 50% |
              | Lines | ${total.lines.pct.toFixed(2)}% | 50% |
              
              **Per-file thresholds:**
              - Core business logic (digest-processor.ts): 80%
              - Agent implementations: 75%
              - API handlers: 70%
              - Utilities: 60%
              `;
              
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            }