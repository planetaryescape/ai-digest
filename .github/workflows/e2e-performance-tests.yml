name: E2E and Performance Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  schedule:
    - cron: '0 2 * * *'  # Run daily at 2 AM UTC

jobs:
  e2e-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      
      - name: Install dependencies
        run: bun install
      
      - name: Build application
        run: bun run build:all
      
      - name: Install Playwright browsers
        run: bun playwright install chromium
      
      - name: Run E2E tests
        env:
          CI: true
          BASE_URL: ${{ secrets.BASE_URL || 'http://localhost:3000' }}
          API_KEY: ${{ secrets.API_KEY }}
          GMAIL_CLIENT_ID: ${{ secrets.GMAIL_CLIENT_ID }}
          GMAIL_CLIENT_SECRET: ${{ secrets.GMAIL_CLIENT_SECRET }}
          GMAIL_REFRESH_TOKEN: ${{ secrets.GMAIL_REFRESH_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          RESEND_API_KEY: ${{ secrets.RESEND_API_KEY }}
          AWS_REGION: us-east-1
          DYNAMODB_TABLE_NAME: test-ai-digest
          S3_BUCKET: test-ai-digest-bucket
        run: bun playwright test
      
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-test-results
          path: |
            test-results/
            playwright-report/
          retention-days: 7
      
      - name: Upload test videos
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-test-videos
          path: test-results/**/*.webm
          retention-days: 3

  performance-benchmarks:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      
      - name: Install dependencies
        run: bun install
      
      - name: Download baseline metrics
        uses: actions/download-artifact@v4
        with:
          name: performance-baselines
          path: test/benchmarks/baselines/
        continue-on-error: true
      
      - name: Run performance benchmarks
        run: |
          bun run test/benchmarks/digest-processing.bench.ts
          bun run test/benchmarks/agents.bench.ts
        env:
          CI: true
      
      - name: Upload baseline metrics
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v4
        with:
          name: performance-baselines
          path: test/benchmarks/baselines/
          retention-days: 30
      
      - name: Comment PR with performance results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            
            // Read benchmark results if available
            const resultsPath = path.join('test', 'benchmarks', 'results.json');
            if (fs.existsSync(resultsPath)) {
              const results = JSON.parse(fs.readFileSync(resultsPath, 'utf8'));
              
              let comment = '## 📊 Performance Benchmark Results\n\n';
              
              if (results.regressions && results.regressions.length > 0) {
                comment += '### ⚠️ Performance Regressions\n';
                results.regressions.forEach(r => {
                  comment += `- ${r}\n`;
                });
                comment += '\n';
              }
              
              if (results.improvements && results.improvements.length > 0) {
                comment += '### ✨ Performance Improvements\n';
                results.improvements.forEach(i => {
                  comment += `- ${i}\n`;
                });
                comment += '\n';
              }
              
              comment += '### 📈 Current Metrics\n';
              comment += '```\n';
              comment += results.summary || 'No summary available';
              comment += '\n```\n';
              
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            }

  integration-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    
    services:
      localstack:
        image: localstack/localstack:latest
        ports:
          - 4566:4566
        env:
          SERVICES: dynamodb,s3,lambda
          DEFAULT_REGION: us-east-1
          LAMBDA_EXECUTOR: local
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      
      - name: Install dependencies
        run: bun install
      
      - name: Wait for LocalStack
        run: |
          timeout 60 bash -c 'until curl -s http://localhost:4566/_localstack/health | grep "\"dynamodb\": \"available\""; do sleep 2; done'
      
      - name: Setup test infrastructure
        run: |
          aws --endpoint-url=http://localhost:4566 dynamodb create-table \
            --table-name test-ai-digest \
            --attribute-definitions AttributeName=id,AttributeType=S \
            --key-schema AttributeName=id,KeyType=HASH \
            --billing-mode PAY_PER_REQUEST \
            --region us-east-1
          
          aws --endpoint-url=http://localhost:4566 s3 mb s3://test-ai-digest-bucket \
            --region us-east-1
        env:
          AWS_ACCESS_KEY_ID: test
          AWS_SECRET_ACCESS_KEY: test
      
      - name: Run integration tests
        run: bun test:integration
        env:
          CI: true
          AWS_ENDPOINT: http://localhost:4566
          AWS_ACCESS_KEY_ID: test
          AWS_SECRET_ACCESS_KEY: test
          AWS_REGION: us-east-1
      
      - name: Upload coverage
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage/lcov.info
          flags: integration
          name: integration-coverage